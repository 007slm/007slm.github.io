<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发 on slm的研发笔记</title>
    <link>https://007slm.github.io/categories/%E5%BC%80%E5%8F%91/</link>
    <description>Recent content in 开发 on slm的研发笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 26 Oct 2018 11:30:16 +0800</lastBuildDate>
    
	<atom:link href="https://007slm.github.io/categories/%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>antlr备忘</title>
      <link>https://007slm.github.io/post/antlr/</link>
      <pubDate>Fri, 26 Oct 2018 11:30:16 +0800</pubDate>
      
      <guid>https://007slm.github.io/post/antlr/</guid>
      <description>antlr 备忘 enter every rule enter expression exit expression exit every rule</description>
    </item>
    
    <item>
      <title>https连接提示pkix path错误</title>
      <link>https://007slm.github.io/post/java%E8%BF%9E%E6%8E%A5https%E6%9C%8D%E5%8A%A1pkix-path%E9%94%99%E8%AF%AF/</link>
      <pubDate>Fri, 26 Oct 2018 11:30:16 +0800</pubDate>
      
      <guid>https://007slm.github.io/post/java%E8%BF%9E%E6%8E%A5https%E6%9C%8D%E5%8A%A1pkix-path%E9%94%99%E8%AF%AF/</guid>
      <description>关于java中用httpclient访问https服务报错 javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target at sun.security.ssl.Alerts.getSSLException(Alerts.java:192) at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949) at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:302) at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:296) at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1514) at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:216) at sun.security.ssl.Handshaker.processLoop(Handshaker.java:1026) at sun.security.ssl.Handshaker.process_record(Handshaker.java:961) at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1062) at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375) at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403) at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387) at</description>
    </item>
    
    <item>
      <title>关于后端进度条的实现</title>
      <link>https://007slm.github.io/post/%E5%90%8E%E7%AB%AF%E5%88%86%E7%89%87%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E5%AE%9E%E7%8E%B0%E8%BF%9B%E5%BA%A6%E6%9D%A1%E8%83%BD%E5%8A%9B/</link>
      <pubDate>Tue, 09 Oct 2018 11:30:16 +0800</pubDate>
      
      <guid>https://007slm.github.io/post/%E5%90%8E%E7%AB%AF%E5%88%86%E7%89%87%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E5%AE%9E%E7%8E%B0%E8%BF%9B%E5%BA%A6%E6%9D%A1%E8%83%BD%E5%8A%9B/</guid>
      <description>关于后端进度条的实现 java代码部分 for (int i =0;i&amp;lt;10;i++) { try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } writer.print(i); writer.flush(); } 重点写一个trunk后要及时flush js部分 得益于fetch api</description>
    </item>
    
    <item>
      <title>微信体系梳理</title>
      <link>https://007slm.github.io/post/%E5%BE%AE%E4%BF%A1%E4%BD%93%E7%B3%BB%E6%A2%B3%E7%90%86/</link>
      <pubDate>Fri, 14 Sep 2018 10:43:33 +0800</pubDate>
      
      <guid>https://007slm.github.io/post/%E5%BE%AE%E4%BF%A1%E4%BD%93%E7%B3%BB%E6%A2%B3%E7%90%86/</guid>
      <description>微信体系梳理 微信开放平台是微信体系的总称 open.weixin.com 下面包含 - 网站应用 web - 移动应用 app - 公众账号 对应公众平台（也就是公众号） - 第三方平台 一般来说是帮助用</description>
    </item>
    
    <item>
      <title>nginx &#43; openresty 备忘</title>
      <link>https://007slm.github.io/post/openresty%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Sun, 09 Sep 2018 11:30:16 +0800</pubDate>
      
      <guid>https://007slm.github.io/post/openresty%E7%9B%B8%E5%85%B3/</guid>
      <description>nginx + openresty 备忘 nginx的开发者提供了一种简单、粗暴的方式来实现日志文件的切换。来自官网的一篇文章Log Rotation介绍了这种方法，核心脚本</description>
    </item>
    
  </channel>
</rss>